#ifndef WHICH_UNIT_EXPORT_NUMBER
#define WHICH_UNIT_EXPORT_NUMBER 0
#endif
#if ((WHICH_UNIT_EXPORT_NUMBER==3) || (WHICH_UNIT_EXPORT_NUMBER==2))
#else
////////////////////////////AUTOMATIC WRAP//////
  WRAPPED2 (bool,AutoPilotTo,UnitWrapper,un,bool,ignore_energy_requirement,false)
  voidWRAPPED0(SetTurretAI)
  voidWRAPPED0(DisableTurretAI)
  voidWRAPPED3(leach,float,XshieldPercent,float,YrechargePercent,float,ZenergyPercent)
  WRAPPED0 (int,getFgSubnumber,-1)
  WRAPPED0 (string,getFgID,string())
  voidWRAPPED1(setFullname,string,name)
  WRAPPED0(string,getFullname,string())
  WRAPPED0(string,getFullAIDescription,string())
  voidWRAPPED3(setTargetFg,string,primary,string,secondary,string,tertiary)
  voidWRAPPED1(ReTargetFg,int,which_target)
  WRAPPED0(bool,isStarShip,false)
  WRAPPED0(bool,isPlanet,false)
  WRAPPED0(bool,isJumppoint,false)
  WRAPPED1(bool,isEnemy,UnitWrapper,other,false)
  WRAPPED1(bool,isFriend,UnitWrapper,other,false)
  WRAPPED1(bool,isNeutral,UnitWrapper,other,false)
  WRAPPED1(float,getRelation,UnitWrapper,other,0)
  voidWRAPPED1(ToggleWeapon,bool,Missile)
  voidWRAPPED1(SelectAllWeapon,bool,Missile)
  voidWRAPPED1( Split ,int, level)

  voidWRAPPED0(Init)
  voidWRAPPED1( ActivateJumpDrive ,int ,destination)
  voidWRAPPED0( DeactivateJumpDrive )
  voidWRAPPED0( Destroy)
  WRAPPED1(Vector,LocalCoordinates,UnitWrapper,un,Vector(0,0,0))
  WRAPPED3(bool,InRange,UnitWrapper,target, bool, cone, bool, cap,false)
  WRAPPED0 (float,CloakVisible,false)
  voidWRAPPED1 (Cloak,bool,cloak)
  voidWRAPPED0(RemoveFromSystem)
  WRAPPED2(QVector, PositionITTS ,QVector, local_posit, float, speed,QVector(0,0,0))
  WRAPPED0(QVector,Position,QVector(0,0,0))
  WRAPPED0(QVector, LocalPosition,QVector(0,0,0))

  WRAPPED0(UnitWrapper, Threat,UnitWrapper())
  voidWRAPPED1( TargetTurret ,UnitWrapper,targ)
  voidWRAPPED2( Threaten ,UnitWrapper,targ, float,danger)
  voidWRAPPED0( ResetThreatLevel)
  voidWRAPPED2( Fire,bool,Missile,bool,OnlyCollideWithTarget)
  voidWRAPPED0( UnFire)
  WRAPPED0(float, computeLockingPercent,0)//how locked are we
  WRAPPED0(float, FShieldData,0)
  WRAPPED0(float, RShieldData,0)
  WRAPPED0(float, LShieldData,0)
  WRAPPED0(float, BShieldData ,0)
  WRAPPED0(float, FuelData,0)
  WRAPPED0(float, EnergyData,0)
  WRAPPED0(float, GetHull,0)
  WRAPPED0(float, GetHullPercent,0)
  WRAPPED0(float, rSize ,0)
#endif
#if WHICH_UNIT_EXPORT_NUMBER==1 || WHICH_UNIT_EXPORT_NUMBER==3
#else
  WRAPPED1(double, getMinDis,QVector,pnt,0)//for clicklist
  WRAPPED3(float, querySphere, QVector,start, QVector ,end, float ,my_unit_radius,0)
  WRAPPED3(int, queryBoundingBox,QVector,origin,Vector,direction, float, err,0)
  voidWRAPPED0( PrimeOrders)
  voidWRAPPED1( LoadAIScript, std::string ,aiscript)
  WRAPPED0(bool, LoadLastPythonAIScript,false )
  WRAPPED0(bool, EnqueueLastPythonAIScript,false )
  voidWRAPPED1( SetPosition,QVector,pos)
  voidWRAPPED1( SetCurPosition ,QVector, pos)
  voidWRAPPED1( SetPosAndCumPos ,QVector,pos)
  voidWRAPPED1( Rotate,Vector,axis)
  voidWRAPPED1( ApplyForce,Vector,Vforce) 
  voidWRAPPED1( ApplyLocalForce,Vector,Vforce) 
  voidWRAPPED1( Accelerate,Vector,Vforce) 
  voidWRAPPED2( ApplyTorque ,Vector,Vforce, QVector,Location)
  voidWRAPPED2( ApplyBalancedLocalTorque ,Vector,Vforce, Vector,Location) 
  voidWRAPPED1( ApplyLocalTorque,Vector,torque) 
  WRAPPED2(float, DealDamageToHull ,Vector,pnt, float, Damage,0)
  WRAPPED2(Vector, ClampThrust,Vector,thrust, bool, afterburn,Vector(0,0,0))
  voidWRAPPED2( Thrust,Vector,amt,bool, afterburn )
  voidWRAPPED1( LateralThrust,float, amt)
  voidWRAPPED1( VerticalThrust,float, amt)
  voidWRAPPED1( LongitudinalThrust,float, amt)
  WRAPPED2(Vector, ClampVelocity ,Vector, velocity, bool, afterburn,Vector(0,0,0))
  WRAPPED1(Vector, ClampAngVel ,Vector, vel,Vector(0,0,0))
  WRAPPED1(Vector, ClampTorque,Vector,torque,Vector(0,0,0))
  voidWRAPPED2( SetOrientation ,QVector ,q, QVector, r)
  WRAPPED1(Vector, UpCoordinateLevel,Vector,v,Vector(0,0,0))
  WRAPPED1(Vector, DownCoordinateLevel,Vector,v,Vector(0,0,0))
  WRAPPED1(Vector, ToLocalCoordinates,Vector,v,Vector(0,0,0))
  WRAPPED1(Vector, ToWorldCoordinates,Vector,v,Vector(0,0,0))
  WRAPPED0(Vector,GetAngularVelocity,Vector(0,0,0))
  WRAPPED0(Vector,GetVelocity,Vector(0,0,0))
  voidWRAPPED1( SetVelocity ,Vector, v)
  voidWRAPPED1( SetAngularVelocity ,Vector, v)
#endif
#if WHICH_UNIT_EXPORT_NUMBER==1 || WHICH_UNIT_EXPORT_NUMBER==2
#else
  WRAPPED0(float, GetMoment,0)
  WRAPPED0(float, GetMass,0)
  WRAPPED0(int,LockMissile,0)
  voidWRAPPED1(EjectCargo,int,index)
  WRAPPED1(float,PriceCargo,std::string,s,0)
  WRAPPED0(int,numCargo,0)
  WRAPPED1(bool,IsCleared,UnitWrapper,dockingunit,false)
  voidWRAPPED5(ImportPartList,std::string,category, float, price, float, pricedev, float, quantity, float, quantdev)
  WRAPPED1(bool,RequestClearance,UnitWrapper,dockingunit,false)
  WRAPPED1(bool,isDocked,UnitWrapper,dockingUnit,false)
  WRAPPED1(bool,Dock,UnitWrapper,unitToDockWith,false)
  WRAPPED1(bool,UnDock,UnitWrapper,unitToDockWith,false)
  WRAPPED0(int,DockedOrDocking,0)
  WRAPPED0(int,GetNumMounts,0)
  EXPORT_UTIL0(UnitWrapper,owner)
  voidEXPORT_UTIL1(performDockingOperations,UnitWrapper,unitToDockWith)

	EXPORT_UTIL0(string,getFactionName)
	EXPORT_UTIL0(int,getFactionIndex)
	voidEXPORT_UTIL1(setFactionIndex,int,factionname)
	voidEXPORT_UTIL1(setFactionName,string,factionname)
	EXPORT_UTIL0(string,getName)
	voidEXPORT_UTIL1(setName,string,name)
	voidEXPORT_UTIL1(SetHull,float,hull)
    EXPORT_UTIL0(string,getFlightgroupName)
	EXPORT_UTIL0(UnitWrapper,getFlightgroupLeader)
	EXPORT_UTIL1(bool,setFlightgroupLeader,UnitWrapper,un)
	EXPORT_UTIL0(string,getFgDirective)
	EXPORT_UTIL1(bool,setFgDirective,string,inp)
//	EXPORT_UTIL0(int,getFgSubnumber)
	EXPORT_UTIL3(int,removeCargo,string,s, int,quantity, bool, erasezero)
	EXPORT_UTIL5(float,upgrade,string,file,int,mountoffset,int, subunitoffset, bool, force,bool, loop_through_mounts)
	EXPORT_UTIL1(int, addCargo, Cargo, carg)
	EXPORT_UTIL2(bool, incrementCargo,float, percentagechange,int, quantity)
	EXPORT_UTIL1(bool,decrementCargo,float, percentagechange)
	EXPORT_UTIL1(float, getDistance,UnitWrapper, un)
//	EXPORT_UTIL0(float, getPlanetRadiusPercent)
	EXPORT_UTIL1(float, getSignificantDistance,UnitWrapper, sig)
	EXPORT_UTIL1(int, hasCargo,std::string,mycarg)
	EXPORT_UTIL1(Cargo, GetCargoIndex, int, index);
	EXPORT_UTIL1(Cargo, GetCargo,std::string,cargname)
	EXPORT_UTIL0(string,getUnitSystemFile)
	EXPORT_UTIL0(float,getCredits)
	voidEXPORT_UTIL1(addCredits,float,credits)
	EXPORT_UTIL0(bool,isSignificant)
	EXPORT_UTIL0(bool,isSun)
	voidEXPORT_UTIL1(switchFg,string,arg)
	EXPORT_UTIL2(int,communicateTo,UnitWrapper,other_unit,float,mood)
	EXPORT_UTIL1(bool,commAnimation,string,anim)
	EXPORT_UTIL1(bool,JumpTo,string,system)
	EXPORT_UTIL0(int,isPlayerStarship )
	voidEXPORT_UTIL1(setECM, short,NewECM)
	EXPORT_UTIL0(short,getECM )
	voidEXPORT_UTIL1(setSpeed, float,speed)
	EXPORT_UTIL0(float,maxSpeed)
	EXPORT_UTIL0(float,maxAfterburnerSpeed)
	voidEXPORT_UTIL5(orbit,UnitWrapper,orbitee,float,speed,QVector,R,QVector,S,QVector,center)
#endif
