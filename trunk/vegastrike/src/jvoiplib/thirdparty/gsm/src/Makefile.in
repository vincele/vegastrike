# Machine- or installation dependent flags you should configure to port

SASR	= -DSASR
######### Define SASR if >> is a signed arithmetic shift (-1 >> 1 == -1)

MULHACK = -DUSE_FLOAT_MUL
######### Define this if your host multiplies floats faster than integers,
######### e.g. on a SPARCstation.

FAST	= -DFAST
######### Define together with USE_FLOAT_MUL to enable the GSM library's
######### approximation option for incorrect, but good-enough results.

# LTP_CUT	= -DLTP_CUT
LTP_CUT	=
######### Define to enable the GSM library's long-term correlation 
######### approximation option---faster, but worse; works for
######### both integer and floating point multiplications.
######### This flag is still in the experimental stage.

#WAV49	= -DWAV49
WAV49	=
######### Define to enable the GSM library's option to pack GSM frames 
######### in the style used by the WAV #49 format.  If you want to write
######### a tool that produces .WAV files which contain GSM-encoded data,
######### define this, and read about the GSM_OPT_WAV49 option in the
######### manual page on gsm_option(3).

# Choose a compiler.  The code works both with ANSI and K&R-C.
# Use -DNeedFunctionPrototypes to compile with, -UNeedFunctionPrototypes to
# compile without, function prototypes in the header files.
#
# You can use the -DSTUPID_COMPILER to circumvent some compilers'
# static limits regarding the number of subexpressions in a statement.

# CC		= cc
# CCFLAGS 	= -c -DSTUPID_COMPILER

CXX		= @CXX@
CFLAGS		= @JVOIP_CFLAGS@ -DNeedFunctionPrototypes=1 $(SASR) $(LTP_CUT) $(WAV49) \
		  $(FAST) $(MULHACK)
 
INCLUDES	= -I ../inc

SUBDIRS 	= componentframework libcomponents thirdparty
JVOIPLIBDIR	= ../../../../lib/
JVOIPINCLUDEDIR	= ../../../../include/
OBJECTS 	= gsm_add.o		\
		  gsm_code.o		\
		  gsm_debug.o		\
		  gsm_decode2.o		\
		  gsm_long_term.o	\
		  gsm_lpc.o		\
		  gsm_preprocess.o	\
		  gsm_rpe.o		\
		  gsm_destroy.o	\
		  gsm_decode.o	\
		  gsm_encode.o	\
		  gsm_explode.o	\
		  gsm_implode.o	\
		  gsm_create.o	\
		  gsm_print.o	\
		  gsm_option.o	\
		  gsm_short_term.o	\
		  gsm_table.o

.SUFFIXES: .cpp

.cpp.o:
	$(CXX) $(CFLAGS) $(INCLUDES) -c -o $@ $<

all: $(OBJECTS)
	cp -f $(OBJECTS) $(JVOIPLIBDIR)
	cp -f ../inc/gsm.h $(JVOIPINCLUDEDIR)
	
clean:
	rm -f $(OBJECTS)

