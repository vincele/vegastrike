dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/vegastrike.h)
AM_INIT_AUTOMAKE(vegastrike, "0.1.1")
AM_CONFIG_HEADER(config.h)

dnl AC_LANG_CPLUSPLUS

dnl Check system type
AC_CANONICAL_HOST

dnl Check for compilers.  We set CFLAGS and CXXFLAGS to null if unset, so
dnl that these macros won't set them to default values that we don't want.
if test "x${CFLAGS-notset}" = "xnotset" ; then
    export CFLAGS
    CFLAGS=""
fi
AC_PROG_CC

if test "x${CXXFLAGS-notset}" = "xnotset" ; then
    export CXXFLAGS
    CXXFLAGS=""
fi
AC_PROG_CXX

dnl Check for ranlib
AC_PROG_RANLIB

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME

dnl Checks for library functions.
AC_CHECK_FUNCS(getcwd gettimeofday strdup)

dnl Check for non-standard floating point functions and headers
AC_CHECK_FUNCS(finite isnan)
AC_CHECK_FUNCS(_finite _isnan)
AC_CHECK_HEADERS(ieeefp.h)

dnl --------------------------------------------------------------------------
dnl General options
dnl --------------------------------------------------------------------------
TR_CPPFLAGS=""
TR_CFLAGS="-O3 -Wall -fomit-frame-pointer -ffast-math -fexpensive-optimizations"
TR_CXXFLAGS="-O3 -Wall -fomit-frame-pointer  -ffast-math -fexpensive-optimizations"
TR_LIBS=""

case "$host" in
i*86-*-*) TR_CFLAGS="$TR_CFLAGS -malign-loops=2 -malign-jumps=2 -malign-functions=2";
          TR_CXXFLAGS="$TR_CXXFLAGS -malign-loops=2 -malign-jumps=2 -malign-functions=2";;
esac

AC_ARG_ENABLE(debug,     [  --enable-debug          Produce an executable with debugging symbols], [TR_CFLAGS="-g -Wall "; TR_CXXFLAGS="-g -Wall"])

AC_ARG_ENABLE(debug-rel,     [  --enable-debug-rel          Produce an executable with debugging symbols], [TR_CFLAGS="-g -Wall -ffast-math -fexpensive-optimizations -malign-loops=2 -malign-functions=2"; TR_CXXFLAGS="-g -Wall -ffast-math -fexpensive-optimizations -malign-loops=2 -malign-functions=2"])

AC_ARG_ENABLE(profile,[  --enable-profile      Produce a profiled executable],  [TR_CFLAGS="-g -pg"; TR_CXXFLAGS="-g  -pg"])

AC_ARG_ENABLE(pedantic,  [  --enable-pedantic       Enable -pedantic (and -ansi for C) when compiling], TR_CFLAGS="$TR_CFLAGS -ansi -pedantic"; TR_CXXFLAGS="$TR_CXXFLAGS -pedantic")

dnl --------------------------------------------------------------------------
dnl Check if compiling for Win32
dnl --------------------------------------------------------------------------
AC_MSG_CHECKING([for Win32 platform])
AC_EGREP_CPP(yes,
[ 
#if defined(WIN32) || defined(__CYGWIN__)
  yes
#endif
], is_win32=yes, is_win32=no )
AC_MSG_RESULT([$is_win32])

dnl Add libs required for Windows
dnl I don't use -mwindows since I like having the console around
dnl If the console annoys you then remove "-luser32 -lgdi32" and replace
dnl with "-mwindows"
if test "x$is_win32" = "xyes" ; then
    TR_LIBS="$TR_LIBS -luser32 -lgdi32"
fi


dnl --------------------------------------------------------------------------
dnl Check for SDL
dnl --------------------------------------------------------------------------
SDL_VERSION=1.0.1
AM_PATH_SDL($SDL_VERSION, have_SDL=yes, have_SDL=no)

if test "x$have_SDL" = "xyes" ; then
    TR_CPPFLAGS="$TR_CPPFLAGS -DHAVE_SDL=1"
    TR_CFLAGS="$TR_CFLAGS $SDL_CFLAGS"
    TR_CXXFLAGS="$TR_CXXFLAGS $SDL_CFLAGS"
    TR_LIBS="$TR_LIBS $SDL_LIBS"

    dnl Check for joystick support in SDL
    saved_LIBS="$LIBS"
    LIBS="$saved_LIBS $TR_LIBS"

    AC_CHECK_FUNCS( SDL_JoystickOpen, 
                    have_SDL_joystick=yes, have_SDL_joystick=no )

    if test "x$have_SDL_joystick" = "xno" ; then
        echo "*** This version of SDL doesn't have joystick support."
        echo "*** Configuring without joystick support."
    fi

    dnl Check for SDL_mixer
dnl    AC_CHECK_LIB( SDL_mixer, Mix_OpenAudio, 
dnl                  have_SDL_mixer=yes, have_SDL_mixer=no )

dnl    if test "x$have_SDL_mixer" = "xyes" ; then 
dnl	TR_CPPFLAGS="$TR_CPPFLAGS -DHAVE_SDL_MIXER=1" 
dnl        TR_LIBS="$TR_LIBS -lSDL_mixer"
dnl    else
dnl        echo "*** SDL_mixer not found.  Configuring without audio support."
dnl    fi

    LIBS="$saved_LIBS"
else
    echo "*** SDL not found.  Configuring without audio or joystick support."
fi


dnl --------------------------------------------------------------------------
dnl Check for GL library
dnl --------------------------------------------------------------------------
AC_ARG_WITH(gl-libs,      [  --with-gl-libs=DIR      GL/MesaGL library location])
AC_ARG_WITH(gl-lib-name,  [  --with-gl-lib-name=NAME GL library name])

if test "x$with_gl_libs" = "x" ; then
    GL_LDOPTS=""
else
    GL_LDOPTS="-L$with_gl_libs"
fi

saved_LIBS="$LIBS"

AC_DEFUN( CHECK_FOR_GL_LIB, [
    AC_MSG_CHECKING([for $GL_LIB_NAME library])
    LIBS="$saved_LIBS $TR_LIBS $GL_LDOPTS -l$GL_LIB_NAME"
    AC_TRY_LINK( , , have_GL=yes, have_GL=no)
    AC_MSG_RESULT([$have_GL])

    if test "x$have_GL" = "xyes" ; then
	TR_LIBS="$TR_LIBS $GL_LDOPTS -l$GL_LIB_NAME"

    else
	dnl Try with -lpthread

	AC_MSG_CHECKING([for $GL_LIB_NAME library (with pthreads)])
	LIBS="$saved_LIBS $TR_LIBS $GL_LDOPTS -l$GL_LIB_NAME -lpthread"
	AC_TRY_LINK( , , have_GL=yes, have_GL=no)
	AC_MSG_RESULT([$have_GL])

	if test "x$have_GL" = "xyes" ; then
	    TR_LIBS="$TR_LIBS $GL_LDOPTS -l$GL_LIB_NAME -lpthread"
	fi
    fi
])

AC_DEFUN( FIND_GL_LIB, [
    if test "x$with_gl_lib_name" = "x" ; then
        GL_LIB_NAME="GL"
    else
        GL_LIB_NAME="$with_gl_lib_name"
    fi

    CHECK_FOR_GL_LIB

    if test "x$have_GL" = "xno" -a "x$with_gl_lib_name" = "x" ; then
        GL_LIB_LIST=`grep -v -E "^$GL_LIB_NAME\$" <<EOF
GL
MesaGL
opengl32
EOF
`

        for GL_LIB_NAME in $GL_LIB_LIST ; do
            CHECK_FOR_GL_LIB

            if test "x$have_GL" = "xyes" ; then
                break;
            fi
        done
    fi
])

FIND_GL_LIB

if test "x$have_GL" = "xno" -a "x$GL_LDOPTS" = "x" ; then
    echo "*** Hmm, you don't seem to have OpenGL libraries installed in the standard"
    echo "*** location (/usr/lib).  I'll check in /usr/X11R6/lib, since"
    echo "*** many distributions (incorrectly) put OpenGL libs there."
    GL_LDOPTS="-L/usr/X11R6/lib"
    FIND_GL_LIB
fi

if test "x$have_GL" = "xno" ; then
    AC_MSG_ERROR([Cannot find GL library])
fi

if test "x$is_win32" = "xno" ; then
    dnl Make sure GL lib is up-to-date
    AC_CHECK_FUNCS( glXGetProcAddressARB, gl_up_to_date=yes, gl_up_to_date=no )

    if test "x$gl_up_to_date" = "xno" ; then
	AC_MSG_ERROR([Your copy of OpenGL is out of date. If using Mesa, make sure you have version >= 3.2.])
    fi
fi

LIBS="$saved_LIBS"




dnl --------------------------------------------------------------------------
dnl Check for GLU library
dnl --------------------------------------------------------------------------
AC_ARG_WITH(glu-libs,      [  --with-glu-libs=DIR      GLU/MesaGLU library location])
AC_ARG_WITH(glu-lib-name,  [  --with-glu-lib-name=NAME GLU library name])

if test "x$with_glu_libs" = "x" ; then
    GLU_LDOPTS=""
else
    GLU_LDOPTS="-L$with_glu_libs"
fi

saved_LIBS="$LIBS"

AC_DEFUN( CHECK_FOR_GLU_LIB, [
    AC_MSG_CHECKING([for $GLU_LIB_NAME library])
    LIBS="$saved_LIBS $TR_LIBS $GLU_LDOPTS -l$GLU_LIB_NAME"
    AC_TRY_LINK( , , have_GLU=yes, have_GLU=no)
    AC_MSG_RESULT([$have_GLU])

    if test "x$have_GLU" = "xyes" ; then
	TR_LIBS="$TR_LIBS $GLU_LDOPTS -l$GLU_LIB_NAME"

    else
	dnl Try with -lpthread

	AC_MSG_CHECKING([for $GLU_LIB_NAME library (with pthreads)])
	LIBS="$saved_LIBS $TR_LIBS $GLU_LDOPTS -l$GLU_LIB_NAME -lpthread"
	AC_TRY_LINK( , , have_GLU=yes, have_GLU=no)
	AC_MSG_RESULT([$have_GLU])

	if test "x$have_GLU" = "xyes" ; then
	    TR_LIBS="$TR_LIBS $GLU_LDOPTS -l$GLU_LIB_NAME -lpthread"
	fi
    fi
])

AC_DEFUN( FIND_GLU_LIB, [
    if test "x$with_glu_lib_name" = "x" ; then
        GLU_LIB_NAME="GLU"
    else
        GLU_LIB_NAME="$with_glu_lib_name"
    fi

    CHECK_FOR_GLU_LIB

    if test "x$have_GLU" = "xno" -a "x$with_glu_lib_name" = "x" ; then
        GLU_LIB_LIST=`grep -v -E "^$GLU_LIB_NAME\$" <<EOF
GLU
MesaGLU
openglu32
EOF
`

        for GLU_LIB_NAME in $GLU_LIB_LIST ; do
            CHECK_FOR_GLU_LIB

            if test "x$have_GLU" = "xyes" ; then
                break;
            fi
        done
    fi
])

FIND_GLU_LIB

if test "x$have_GLU" = "xno" -a "x$GLU_LDOPTS" = "x" ; then
    echo "*** Hmm, you don't seem to have OpenGLU libraries installed in the standard"
    echo "*** location (/usr/lib).  I'll check in /usr/X11R6/lib, since"
    echo "*** many distributions (incorrectly) put OpenGLU libs there."
    GLU_LDOPTS="-L/usr/X11R6/lib"
    FIND_GLU_LIB
fi

if test "x$have_GLU" = "xno" ; then
    AC_MSG_ERROR([Cannot find GLU library])
fi

LIBS="$saved_LIBS"





dnl --------------------------------------------------------------------------
dnl Check for OpenGL headers
dnl --------------------------------------------------------------------------

AC_ARG_WITH(gl-inc,   [  --with-gl-inc=DIR       OpenGL header file location])

if test "x$with_gl_inc" = "x" ; then
    GL_CPPFLAGS=""
else 
    GL_CPPFLAGS="-I$with_gl_inc"
fi

dnl check for gl.h
saved_CPPFLAGS="$CPPFLAGS"

AC_DEFUN( CHECK_FOR_GL_H, [
    CPPFLAGS="$saved_CPPFLAGS $GL_CPPFLAGS $TR_CPPFLAGS"

    AC_MSG_CHECKING([for GL/gl.h])
    AC_TRY_CPP( [ #include <GL/gl.h> ], have_gl_h=yes, have_gl_h=no )
    AC_MSG_RESULT([$have_gl_h])
])

CHECK_FOR_GL_H

if test "x$have_gl_h" = "xno" -a "x$GL_CPPFLAGS" = "x" ; then
    echo "*** Hmm, you don't seem to have OpenGL headers installed in the standard"
    echo "*** location (/usr/include).  I'll check in /usr/X11R6/include, since"
    echo "*** many distributions (incorrectly) put OpenGL headers there."
    GL_CPPFLAGS="-I/usr/X11R6/include"
    CHECK_FOR_GL_H
fi

if test "x$have_gl_h" = "xno" ; then
    AC_MSG_ERROR([Cannot find GL/gl.h])
fi

dnl Check for glext.h 
AC_CHECK_HEADERS( "GL/glext.h", have_glext_h=yes, have_glext_h=no )

if test "x$have_glext_h" = "xno" ; then
    AC_MSG_ERROR([
*****************************************************************
You are missing the file glext.h.
You can get a copy at
http://oss.sgi.com/projects/ogl-sample/ABI/glext.h
Place it in the directory /usr/include/GL.
*****************************************************************])
fi

dnl Check that glext.h version is recent enough
AC_MSG_CHECKING([whether glext.h is recent enough]);
AC_EGREP_CPP(yes,
[
#include <GL/glext.h>
#if defined(GL_GLEXT_VERSION) && GL_GLEXT_VERSION >= 6
 yes
#endif
], is_glext_h_recent=yes, is_glext_h_recent=no )
AC_MSG_RESULT([$is_glext_h_recent])

if test "x$is_glext_h_recent" = "xno" ; then
    AC_MSG_ERROR([
*****************************************************************
Your copy of glext.h is out of date.
You can get a copy of the latest version at
http://oss.sgi.com/projects/ogl-sample/ABI/glext.h
Place it in the directory /usr/include/GL.
*****************************************************************])
fi

CPPFLAGS="$saved_CPPFLAGS" 
TR_CPPFLAGS="$TR_CPPFLAGS $GL_CPPFLAGS"


dnl --------------------------------------------------------------------------
dnl Check for glut library
dnl --------------------------------------------------------------------------
AC_ARG_WITH(glut-libs,[  --with-glut-libs=DIR    Location of GLUT library])

if test "x$with_glut_libs" = "x" ; then
    GLUT_LDOPTS=""
else
    GLUT_LDOPTS="-L$with_glut_libs"
fi

AC_DEFUN( CHECK_FOR_GLUT_LIB, [
    AC_MSG_CHECKING([for $GLUT_LIB_NAME library])
    LIBS="$saved_LIBS $TR_LIBS $GLUT_LDOPTS -l$GLUT_LIB_NAME"
    AC_TRY_LINK( , , have_glut_lib=yes, have_glut_lib=no )
    AC_MSG_RESULT([$have_glut_lib])
]) 

saved_LIBS="$LIBS"

GLUT_LIB_LIST="glut glut32"

for GLUT_LIB_NAME in $GLUT_LIB_LIST ; do
    CHECK_FOR_GLUT_LIB

    if test "x$have_glut_lib" = "xyes" ; then
        break;
    fi
done

if test "x$have_glut_lib" = "xno" ; then
    AC_MSG_ERROR([GLUT library not found or too old version. 3.7 (beta) or later required.])
fi

LIBS="$saved_LIBS"
TR_LIBS="$TR_LIBS $GLUT_LDOPTS -l$GLUT_LIB_NAME"


dnl --------------------------------------------------------------------------
dnl Check for glut.h
dnl --------------------------------------------------------------------------

AC_ARG_WITH(glut-inc, [  --with-glut-inc=DIR     Specify GLUT header file location])

if test "x$with_glut_inc" = "x" ; then
    GLUT_CPPFLAGS=""
else
    GLUT_CPPFLAGS="-I$with_glut_inc"
fi

saved_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$saved_CPPFLAGS $TR_CPPFLAGS $GLUT_CPPFLAGS"
AC_CHECK_HEADER([GL/glut.h], have_glut_h=yes, have_glut_h=no )

if test "x$have_glut_h" = "xno" ; then
    AC_MSG_ERROR([Cannot find GL/glut.h])
fi

CPPFLAGS="$saved_CPPFLAGS"
TR_CPPFLAGS="$TR_CPPFLAGS $GLUT_CPPFLAGS"


dnl --------------------------------------------------------------------------
dnl Check for expat library
dnl --------------------------------------------------------------------------
AC_ARG_WITH(expat-libs,[  --with-expat-libs=DIR    Location of expat library])

if test "x$with_expat_libs" = "x" ; then
    EXPAT_LDOPTS=""
else
    EXPAT_LDOPTS="-L$with_expat_libs"
fi

AC_DEFUN( CHECK_FOR_EXPAT_LIB, [
    AC_MSG_CHECKING([for $EXPAT_LIB_NAME library])
    LIBS="$EXPAT_LDOPTS -l$EXPAT_LIB_NAME"
    AC_TRY_LINK( , , have_expat_lib=yes, have_expat_lib=no )
    AC_MSG_RESULT([$have_expat_lib])
]) 

saved_LIBS="$LIBS"

EXPAT_LIB_LIST="expat"

for EXPAT_LIB_NAME in $EXPAT_LIB_LIST ; do
    CHECK_FOR_EXPAT_LIB

    if test "x$have_expat_lib" = "xyes" ; then
        break;
    fi
done

if test "x$have_expat_lib" = "xno" ; then
    AC_MSG_ERROR([Expat library not found])
fi

LIBS="$saved_LIBS"
TR_LIBS="$TR_LIBS $EXPAT_LDOPTS -l$EXPAT_LIB_NAME"


dnl --------------------------------------------------------------------------
dnl Check for expat.h
dnl --------------------------------------------------------------------------

AC_ARG_WITH(expat-inc, [  --with-expat-inc=DIR     Specify expat header file location])

if test "x$with_expat_inc" = "x" ; then
    EXPAT_CPPFLAGS=""
else
    EXPAT_CPPFLAGS="-I$with_expat_inc"
fi

saved_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$saved_CPPFLAGS $TR_CPPFLAGS $EXPAT_CPPFLAGS "
AC_CHECK_HEADER([expat.h], have_expat_h=yes, have_expat_h=no )

if test "x$have_expat_h" = "xno" ; then
    AC_MSG_ERROR([Cannot find expat.h])
fi

CPPFLAGS="$saved_CPPFLAGS"
TR_CPPFLAGS="$TR_CPPFLAGS $EXPAT_CPPFLAGS"



dnl --------------------------------------------------------------------------
dnl Check for png library
dnl --------------------------------------------------------------------------
AC_ARG_WITH(png-libs,[  --with-png-libs=DIR    Location of png library])

if test "x$with_png_libs" = "x" ; then
    PNG_LDOPTS=""
else
    PNG_LDOPTS="-L$with_png_libs"
fi

AC_DEFUN( CHECK_FOR_PNG_LIB, [
    AC_MSG_CHECKING([for $PNG_LIB_NAME library])
    LIBS="$PNG_LDOPTS -l$PNG_LIB_NAME"
    AC_TRY_LINK( , , have_png_lib=yes, have_png_lib=no )
    AC_MSG_RESULT([$have_png_lib])
]) 

saved_LIBS="$LIBS"

PNG_LIB_LIST="png"

for PNG_LIB_NAME in $PNG_LIB_LIST ; do
    CHECK_FOR_PNG_LIB

    if test "x$have_png_lib" = "xyes" ; then
        break;
    fi
done

if test "x$have_png_lib" = "xno" ; then
    AC_MSG_ERROR([Png library not found])
fi

LIBS="$saved_LIBS"
TR_LIBS="$TR_LIBS $PNG_LDOPTS -l$PNG_LIB_NAME"


dnl --------------------------------------------------------------------------
dnl Check for png.h
dnl --------------------------------------------------------------------------

AC_ARG_WITH(png-inc, [  --with-png-inc=DIR     Specify png header file location])

if test "x$with_png_inc" = "x" ; then
    PNG_CPPFLAGS=""
else
    PNG_CPPFLAGS="-I$with_png_inc"
fi

saved_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$saved_CPPFLAGS $TR_CPPFLAGS $PNG_CPPFLAGS "
AC_CHECK_HEADER([png.h], have_png_h=yes, have_png_h=no )

if test "x$have_png_h" = "xno" ; then
    AC_MSG_ERROR([Cannot find png.h])
fi

CPPFLAGS="$saved_CPPFLAGS"
TR_CPPFLAGS="$TR_CPPFLAGS $PNG_CPPFLAGS"






dnl --------------------------------------------------------------------------
dnl Check for openal library
dnl --------------------------------------------------------------------------
AC_ARG_WITH(openal-libs,[  --with-openal-libs=DIR    Location of openal library])

if test "x$with_openal_libs" = "x" ; then
    OPENAL_LDOPTS=""
else
    OPENAL_LDOPTS="-L$with_openal_libs"
fi

AC_DEFUN( CHECK_FOR_OPENAL_LIB, [
    AC_MSG_CHECKING([for $OPENAL_LIB_NAME library])
    LIBS="$OPENAL_LDOPTS -l$OPENAL_LIB_NAME"
    AC_TRY_LINK( , , have_openal_lib=yes, have_openal_lib=no )
    AC_MSG_RESULT([$have_openal_lib])
]) 

saved_LIBS="$RRLIBS"

OPENAL_LIB_LIST="openal"

for OPENAL_LIB_NAME in $OPENAL_LIB_LIST ; do
    CHECK_FOR_OPENAL_LIB

    if test "x$have_openal_lib" = "xyes" ; then
	LIBS="$saved_LIBS"
	TR_LIBS="$TR_LIBS $OPENAL_LDOPTS -l$OPENAL_LIB_NAME"
        break;
    else
	LIBS=""
	saved_LIBS=""
    fi
done




dnl --------------------------------------------------------------------------
dnl Check for OpenAL headers
dnl --------------------------------------------------------------------------

AC_ARG_WITH(al-inc,   [  --with-al-inc=DIR       OpenAL header file location])

if test "x$with_al_inc" = "x" ; then
    AL_CPPFLAGS=""
else 
    AL_CPPFLAGS="-I$with_al_inc"
fi

dnl check for al.h
saved_CPPFLAGS="$CPPFLAGS"

AC_DEFUN( CHECK_FOR_AL_H, [
    CPPFLAGS="$saved_CPPFLAGS $AL_CPPFLAGS $TR_CPPFLAGS"

    AC_MSG_CHECKING([for AL/al.h])
    AC_TRY_CPP( [ #include <AL/al.h> ], have_al_h=yes, have_al_h=no )
    AC_MSG_RESULT([$have_al_h])
])

CHECK_FOR_AL_H

if test "x$have_al_h" = "xno" -a "x$AL_CPPFLAGS" = "x" ; then
    echo "*** Hmm, you don't seem to have OpenAL headers installed in the standard"
    echo "*** location (/usr/include).  I'll check in /usr/local/include, since"
    echo "*** many distributions put OpenAL headers there."
    AL_CPPFLAGS="-I/usr/local/include"
    CHECK_FOR_AL_H
fi
if test "x$have_openal_lib" = "xno" ; then
    echo "Cannot find openal library"
    echo "Error::Configuring without OpenAL support!"
else
    if test "x$have_al_h" = "xno" ; then
        echo "Cannot find AL/al.h"
        echo "Error::Configuring without OpenAL support!"
    else
      dnl Check for alext.h 
      AC_CHECK_HEADERS( "AL/alext.h", have_alext_h=yes, have_alext_h=no )

      if test "x$have_alext_h" = "xno" ; then
      AC_MSG_ERROR([
        *****************************************************************
        You are missing the file alext.h.
        Place it in the directory /usr/include/AL.
        *****************************************************************])
      fi
      echo "Configuring with OpenAL support!"
      TR_CPPFLAGS="$TR_CPPFLAGS -DHAVE_AL=1"    
    fi
fi


CPPFLAGS="$saved_CPPFLAGS" 
TR_CPPFLAGS="$TR_CPPFLAGS $AL_CPPFLAGS"

dnl --------------------------------------------------------------------------
dnl Check for python 2.1+ library, and then boost
dnl --------------------------------------------------------------------------
AC_ARG_WITH(python-libs,[  --with-python-libs=DIR    Location of python library])

if test "x$with_python_libs" = "x" ; then
    PYTHON_LDOPTS=""
else
    PYTHON_LDOPTS="-L$with_python_libs"
fi

AC_DEFUN( CHECK_FOR_PYTHON_LIB, [
    AC_MSG_CHECKING([for $PYTHON_LIB_NAME library])
    LIBS="$PYTHON_LDOPTS -l$PYTHON_LIB_NAME -lutil"
    AC_TRY_LINK( , , have_python_lib=yes, have_python_lib=no )
    AC_MSG_RESULT([$have_python_lib])
]) 

saved_LIBS="$RRLIBS"

PYTHON_LIB_LIST="python2.1 python2.2"

for PYTHON_LIB_NAME in $PYTHON_LIB_LIST ; do
    CHECK_FOR_PYTHON_LIB

    if test "x$have_python_lib" = "xyes" ; then
	LIBS="$saved_LIBS"
	TR_LIBS="$TR_LIBS $PYTHON_LDOPTS -l$PYTHON_LIB_NAME -lutil"
        break;
    else
	LIBS=""
	saved_LIBS=""
    fi
done

AC_ARG_WITH(boost-libs,[  --with-boost-libs=DIR    Location of Boost library])

if test "x$with_boost_libs" != "x" ; then
    PYTHON_LDOPTS="$PYTHON_LDOPTS -L$with_boost_libs"
fi

if test "x$have_python_lib" = "xyes" ; then
AC_DEFUN( CHECK_FOR_BOOST_LIB, [
    AC_MSG_CHECKING([for $BOOST_LIB_NAME library])
    LIBS="$PYTHON_LDOPTS -l$BOOST_LIB_NAME"
    AC_TRY_LINK( , , have_boost_lib=yes, have_boost_lib=no )
    AC_MSG_RESULT([$have_boost_lib])
]) 

saved_LIBS="$RRLIBS"

BOOST_LIB_LIST="boost_python"

for BOOST_LIB_NAME in $BOOST_LIB_LIST ; do
    CHECK_FOR_BOOST_LIB

    if test "x$have_python_lib" = "xyes" ; then
	LIBS="$saved_LIBS"
	TR_LIBS="$TR_LIBS $PYTHON_LDOPTS -l$BOOST_LIB_NAME"
        break;
    else
	LIBS=""
	saved_LIBS=""
    fi
done
fi

dnl --------------------------------------------------------------------------
dnl Check for Python & boost headers
dnl --------------------------------------------------------------------------

AC_ARG_WITH(python-inc,   [  --with-python-inc=DIR       Python header file location])

if test "x$with_python_inc" = "x" ; then
    PYTHON_CPPFLAGS=""
else 
    PYTHON_CPPFLAGS="-I$with_python_inc"
fi

dnl check for al.h
saved_CPPFLAGS="$CPPFLAGS"

AC_DEFUN( CHECK_FOR_PYTHON_H, [
    CPPFLAGS="$saved_CPPFLAGS $PYTHON_CPPFLAGS $TR_CPPFLAGS"

    have_python_h=no
    AC_MSG_CHECKING([for Python.h])
    AC_TRY_CPP( [ #include <Python.h> ], 
    AC_TRY_CPP( [ #include <Python.h>
   #if PY_MAJOR_VERSION <= 2 && PY_MINOR_VERSION <1
     #error "Vegastrike needs Python version >= 2.1"
   #endif
    ], [have_python_h=yes
AC_MSG_RESULT([yes])] ,[ AC_MSG_RESULT([Need version >= 2.1])]))
])

CHECK_FOR_PYTHON_H

CPPFLAGS="$saved_CPPFLAGS" 
TR_CPPFLAGS="$TR_CPPFLAGS $PYTHON_CPPFLAGS"

AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_ARG_WITH(boost-inc,   [  --with-boost-inc=DIR       Boost header file location])

if test "x$have_python_h" != "x" ; then
if test "x$with_boost_inc" != "x" ; then
    BOOST_CPPFLAGS="-I$with_boost_inc"
fi

    CPPFLAGS="$saved_CPPFLAGS $PYTHON_CPPFLAGS $BOOST_CPPFLAGS $TR_CPPFLAGS"

    AC_MSG_CHECKING([for <boost/python/module_builder.hpp>])
AC_LANG_CPLUSPLUS
    AC_TRY_CPP( [ #include <boost/python/module_builder.hpp> ], 
    [have_boost_h=yes], [have_boost_h=no])
    AC_MSG_RESULT([$have_boost_h])
fi
AC_LANG_RESTORE

if test "x$have_python_lib" = "xno" ; then
    AC_MSG_WARN([
**************
Python libraries not found
**************
])
else
    if test "x$have_python_h" = "xno" ; then
    AC_MSG_WARN([
**************
Python headers not found
**************
])
    else
    PYTHON_CPPFLAGS="$PYTHON_CPPFLAGS -DHAVE_PYTHON=1"
    fi
fi

if test "x$have_boost_lib" = "xno" ; then
    AC_MSG_WARN([
**************
Boost libraries not found
**************
])
else
    if test "x$have_boost_h" = "xno" ; then
    AC_MSG_WARN([
**************
Boost headers not found
**************
])
    else
    BOOST_CPPFLAGS="$BOOST_CPPFLAGS -DHAVE_BOOST=1"
    fi
fi

CPPFLAGS="$saved_CPPFLAGS" 




dnl --------------------------------------------------------------------------
dnl Other options
dnl --------------------------------------------------------------------------

dnl Turn use of stencil buffer on/off
AC_ARG_ENABLE(stencil-buffer,[  --enable-stencil-buffer Use if your hardware has a stencil buffer],TR_CPPFLAGS="$TR_CPPFLAGS -DUSE_STENCIL_BUFFER")

dnl Specify data directory
AC_ARG_WITH(data-dir,[  --with-data-dir=PATH    Default tuxracer data directory],TR_CPPFLAGS="$TR_CPPFLAGS -DDATA_DIR=\\\"$withval\\\"")


AC_SUBST(TR_CPPFLAGS)
AC_SUBST(TR_CFLAGS)
AC_SUBST(TR_CXXFLAGS)
AC_SUBST(TR_LIBS)
AC_SUBST(PYTHON_CPPFLAGS)
AC_SUBST(BOOST_CPPFLAGS)

CPPFLAGS="$CPPFLAGS $TR_CPPFLAGS $PYTHON_CPPFLAGS $BOOST_CPPFLAGS"
CFLAGS="$CFLAGS $TR_CFLAGS"
CXXFLAGS="$CXXFLAGS $TR_CXXFLAGS"
LIBS="$LIBS $TR_LIBS"

AC_OUTPUT(Makefile src/Makefile src/gldrv/Makefile src/aldrv/Makefile src/gfx/Makefile src/cmd/Makefile src/cmd/ai/Makefile src/cmd/script/Makefile src/cmd/script/c_alike/Makefile src/python/Makefile \
	objconv/Makefile )
