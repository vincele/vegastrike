2001-10-23 Alexander Rawass <alexannika@users.sourceforge.net>

	* modified main_loop to use xml-missions
	* modified unit_xml/event_xml to output filenames if not found
	* added mission to vs_globals.h
	* call to Mission is done in main.cpp
	* modified test1.mission


2001-10-22 Alexander Rawass <alexannika@users.sourceforge.net>

	* added bindings for joy-buttons
	  works only for some commands
	* ordered .vegastrikerc better
	
	
2001-10-22 Daniel Horn <hellcatv@hotmail.com>
	* modified units to go in <data>/unit/<unitname> or <data>/unit/<factionname>/<unitname>
	* modified textures go either in the "current dir" or in <data>/textures/ for shared textures
	* modified sounds to either go in the current dir or <data>/sounds
	* modified animations to go in <currentdir>/animations
	* modified sprites to go in <currentdir>/sprites
	* allowed flat data directories too :-)

	* changed the number of times the sound's location was updated to once every physics phase
	* fixed  a problem with weapons (one that had been there for a while) that weapons would be fired by the AI script and not be aligned to a physics frame... this produced a somewhat cool but undesirable effect to have the weapons seem to carry with them a lot of inertia  so I made the unit remember when a shot was fired, and then instead "fire it" at the physics frame 
	* problem caused: because the physics frame deals with the "next" frame instead of this one....  so I had to use the saved data from the previous frame...which is somewhat inaccurate as I do not know the parent of this unit (may cause problems with a turret on a wildly evading starship)


2001-10-21 Daniel Horn <hellcatv@hotmail.com>

	* added Sound support
	* added buffers share preloaded sounds
	* added heuristic that will take X sounds of one type and N closest sounds
	* modified weapon sounds to be present on the mount (with exception of beams)
	* added sounds in unit config file and global config file for common things like explosions, etc
	* added music that will determine the "badness" of current situation and play sounds accordingly


2001-10-21 Alexander Rawass <alexannika@users.sourceforge.net>
	
	* added mapping from string to KBHandler to config_xml
	* modified firekeyboard.h
	  the static void xxKey(int, KBSTATE) are now public
	   to be used in config_xml
	* removed config tests from main.cpp
	* uncommented old BindKeys(..) in FlyByKeyboard::FlyByKeyboard 
	* uncommented old BindKeys(..) in FireKeyboard
	* uncommented old BindKeys(..) in main_loop:InitializeInput
	* added cockpit-callbacks to main_loop.h
	  gave it namespace CockpitKeys
	* added bindings to vegastrike.config
	

2001-10-20 Alexander Rawass <alexannika@users.sourceforge.net>

	* added variables and colors to vegastrike.config
	* renamed vegaconfig.* to config_xml.* (Daniel's request)
	* modified src/Makefile.am (vegaconfig to config_xml)
	* modified includes in config_xml.cpp, main.cpp and many more ;-)
	* modified TODO/Jobs list
	

2001-10-20 Daniel Horn <hellcatv@hotmail.com>

	* added maximum range and cone functions to various radars
	* added color utilization to the radar 
	* added radar config file to unit_xml that could specify radar stuff

	
2001-10-19 Daniel Horn <hellcatv@hotmail.com>

	* added stub functions in for planned audio functions
	* used stub functions in the places where audio will be present
	* added some init functions to OpenAL functions
	* added config files to gfxlib so they use vegastrike.config
	* added config file defaults to star_system star blending

2001-10-19 Alexander Rawass <alexannika@users.sourceforge.net>

	* added colors and bindings to vegaconfig
	  - the bindings are parsed but not yet bound
	* added src/mission.{cpp,h}
	  - the mission is parsed but not yet used
	* modified src/Makefile.am (added mission)
	* added data/test1.mission
	* modified data/Makefile.am (added test1.mission)
	* added call to Mission to main.cpp (preliminary)
	

2001-10-18 Alexander Rawass <alexannika@users.sourceforge.net>
	
	* added easydom.{cpp,h}
	* added easydom.{cpp,h} to src/Makefile.am
	* re-wrote src/vegaconfig
	* re-wrote data/vegastrike.config
	* added config tests in main.cpp

	
2001-10-16 Alexander Rawass <alexannika@users.sourceforge.net>

	* modified src/vegaconfig
	* added vegaconfig.{cpp,h} to src/Makefile.am
	* added call to VegaConfig to main.cpp::main
	

2001-10-16 Alexander Rawass <alexannika@users.sourceforge.net>

	* added data/vegastrike.config (not used yet)
	* added src/vegaconfig.h  (not used yet)
	* added src/vegaconfig.cpp (not used yet)
	* changed data/Makefile.am from pattern to list
	
	
2001-10-14 Alexander Rawass <alexannika@users.sourceforge.net>

	* added data/Makefile.am
	* modified src/Makefile.am to install binary in $(prefix)/games/@PACKAGE@/bin
	* added objconf/Makefile.am
	* changed configure.in :
	  - version set to 0.0.9cvs
	  - added data and objconv to AC_OUTPUT
	* changed toplevel Makefile.am to find subdirs data and objconv
	* added RPM spec file vegastrike.spec
	

2001-10-11 Alexander Rawass <alexannika@users.sourceforge.net>

	* added joystick buttons
	  - wrote BindButton etc in in_joystick
	  - buttonBindings are called in ProcessJoystick
	  - buttons are bound in FlyByJoystick (FireKeyboardButtons don't work?)
	  - buttonState is set in FlyByJoystick::Execute

	
2001-10-11 Alexander Rawass <alexannika@users.sourceforge.net>

	* made joystick work (no buttons yet, no hat, just steering)
	  - no FlyByWire::Execute(); is called in FlyByKeyboard::Execute()
	      when Joystick is enabled
	    FlyByWire::Execute(); is called instead in FlyByJoystick::Execute()
            please check if keyboard still works on systems without joystick
	  - modified FlyByJoystick::Execute()
	  - improved in_joystick
	  - ProcessJoystick is just a dummy function now

	
2001-10-10 Alexander Rawass <alexannika@users.sourceforge.net>

	* modified doxyConfig:
	  replaced absolute path with relative
	  (documentation is generated in ./doxygen)
	  added alphabetical listing
	* added files in_joystick.{cpp,h}
	* modified Makefile.am to compile in_joystick
	* uncommented SDL_Init in main.cpp
	* calling Process/InitJoystick in in_main.cpp
	* yet only debug-output is done, joystick has no effect yet
	* had to convert modified files from dos to unix
